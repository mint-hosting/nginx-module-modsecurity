---
kind: pipeline
name: build-and-release

platform:
  os: linux
  arch: amd64

clone:
  depth: 10

workspace:
  base: /modsecurity
  path: src

steps:
  - name: Pre-build checks
    image: alpine
    pull: always
    environment:
      nginx_git_tags_uri: https://api.github.com/repos/nginx/nginx/tags
      modsecurity_mint_git_tags_uri: https://api.github.com/repos/mint-hosting/nginx-module-modsecurity/tags
    commands:
      - apk update && apk add jq curl
      - nginx_release_version=$(curl -s $${nginx_git_tags_uri} | jq -r '.[0].name' | cut -d"-" -f2)
      - echo $nginx_release_version
      - node=$(curl -s $${modsecurity_mint_git_tags_uri} | jq --arg NGINXVERSION "$nginx_release_version-debian-11" '.[] | select(.name==$NGINXVERSION) | .node_id')
      - if [[ "$node" != "" ]] ; then exit 1 ; fi
    
  - name: Build on Ubuntu 18.04
    image: ubuntu:18.04
    pull: always
    environment:
      BUILD_OS_VERSION: ubuntu-18.04
      BUILD_BASE_DIR: ubuntu1804 
      MODSECURITY_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity
      MODSECURITY_NGINX_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity-nginx.git
      NGINX_GIT_TAGS_URI: https://api.github.com/repos/nginx/nginx/tags
    commands:
      - chmod +x build.sh && ./build.sh
    depends_on:
      - clone
      - Pre-build checks

  - name: Build on Ubuntu 19.04
    image: ubuntu:19.04
    pull: always
    environment:
      BUILD_OS_VERSION: ubuntu-19.04
      BUILD_BASE_DIR: ubuntu1904 
      MODSECURITY_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity
      MODSECURITY_NGINX_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity-nginx.git
      NGINX_GIT_TAGS_URI: https://api.github.com/repos/nginx/nginx/tags
    commands:
      - chmod +x build.sh && ./build.sh
    depends_on:
      - clone
      - Pre-build checks

  - name: Build on Ubuntu 19.10
    image: ubuntu:19.10
    pull: always
    environment:
      BUILD_OS_VERSION: ubuntu-19.10
      BUILD_BASE_DIR: ubuntu1910
      MODSECURITY_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity
      MODSECURITY_NGINX_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity-nginx.git
      NGINX_GIT_TAGS_URI: https://api.github.com/repos/nginx/nginx/tags
    commands:
      - chmod +x build.sh && ./build.sh
    depends_on:
      - clone
      - Pre-build checks

  - name: Build on Debian 10
    image: debian:buster
    pull: always
    environment:
      BUILD_OS_VERSION: debian-10
      BUILD_BASE_DIR: debian10
      MODSECURITY_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity
      MODSECURITY_NGINX_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity-nginx.git
      NGINX_GIT_TAGS_URI: https://api.github.com/repos/nginx/nginx/tags
    commands:
      - chmod +x build.sh && ./build.sh
    depends_on:
      - clone
      - Pre-build checks

  - name: Build on Debian 9
    image: debian:stretch
    pull: always
    environment:
      BUILD_OS_VERSION: debian-9
      BUILD_BASE_DIR: debian9
      MODSECURITY_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity
      MODSECURITY_NGINX_GIT_REPO_URI: https://github.com/SpiderLabs/ModSecurity-nginx.git
      NGINX_GIT_TAGS_URI: https://api.github.com/repos/nginx/nginx/tags
    commands:
      - chmod +x build.sh && ./build.sh
    depends_on:
      - clone
      - Pre-build checks

  - name: Tag and release
    image: ubuntu:18.04
    pull: always
    environment:
      GITHUB_SSH_KEY: 
        from_secret: ssh_key
      GITHUB_EMAIL:
        from_secret: github_email
      GITHUB_USERNAME:
        from_secret: github_username
      MODSECURITY_MODULE_GIT_REPOSITORY: git@github.com:mint-hosting/nginx-module-modsecurity.git
    commands:
      # Configure SSH and add deploy key
      - apt update && apt -y install git openssh-client
      - mkdir -p /root/.ssh
      - eval "$(ssh-agent -s)"
      - echo "Host github.com\n\tStrictHostKeyChecking no\n" >> /root/.ssh/config
      - echo "$${GITHUB_SSH_KEY}" | tr -d '\r' | ssh-add - > /dev/null
      - git config --global user.email "$${GITHUB_EMAIL}" && git config --global user.name "$${GITHUB_USERNAME}"

      # Tag & release
      - chmod +x release.sh && ./release.sh
    depends_on:
      - clone
      - Build on Debian 10
      - Build on Debian 9
      - Build on Ubuntu 19.10
      - Build on Ubuntu 19.04
      - Build on Ubuntu 18.04

  - name: Notifications for checks
    image: plugins/slack
    settings:
      webhook: 
        from_secret: slack_webhook_url
      channel:
        from_secret: slack_channel
      username:
        from_secret: slack_username
      template: >
        {{#success build.status}}
          {{ repo.name }} build {{ build.number }} succeeded!
        {{else}}
          {{ repo.name }} build {{ build.number }} didn't run because module is already compiled for this version of Nginx. Last commit was {{ build.link }}
        {{/success}}
    when:
      status: [failure ]
    depends_on:
      - Pre-build checks
  
  - name: Notifications for build
    image: plugins/slack
    settings:
      webhook: 
        from_secret: slack_webhook_url
      channel:
        from_secret: slack_channel
      username:
        from_secret: slack_username
      template: >
        {{#success build.status}}
          {{ repo.name }} build {{ build.number }} succeeded!
        {{else}}
          {{ repo.name }} build {{ build.number }} has failed. Last commit was {{ build.link }}
        {{/success}}
    when:
      status: [ success ]
    depends_on:
      - Build on Debian 10
      - Build on Debian 9
      - Build on Ubuntu 19.10
      - Build on Ubuntu 19.04
      - Build on Ubuntu 18.04
      - Tag and release
trigger:
  branch:
  - master